---

- name: Install k3s
  shell: curl -sfL https://get.k3s.io | sh -s -
  args:
    creates: /etc/rancher/k3s/k3s.yaml
  register: result
  until: "result is not failed"
  retries: 10
  delay: 10

- name: Install apt packages
  apt:
    name:
      - python3-yaml
    update_cache: yes

- name: Install helm
  shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm

- name: Add Prometheus Helm charts repository
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

#- set_fact:
#    targets: { targets: ['{{ item.value.ansible_host }}:9100'], labels: { instance: '{{ item.value.kypo_global_sandbox_name }}-{{ item.value.inventory_hostname }}'}}
#  loop: "{{ hostvars | dict2items }}"
#  register: target_list
#
#- name: Deploy prometheus
#  kubernetes.core.helm:
#    kubeconfig: /etc/rancher/k3s/k3s.yaml
#    name: prometheus
#    chart_ref: prometheus-community/kube-prometheus-stack
#    release_namespace: prometheus
#    wait: True
#    update_repo_cache: True
#    create_namespace: True
#    values:
#      prometheus:
#        service:
#          type: LoadBalancer
#        prometheusSpec:
#          additionalScrapeConfigs:
#            - job_name: "sandbox-{{ kypo_global_sandbox_allocation_unit_id }}"
#              metrics_path: "/metrics"
#              static_configs: "{{ target_list.results | map(attribute='ansible_facts.targets') | list }}"

- name: Deploy blackbox exporter
  kubernetes.core.helm:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    name: prometheus-blackbox-exporter
    chart_ref: prometheus-community/prometheus-blackbox-exporter
    release_namespace: prometheus
    wait: True
    update_repo_cache: true
    create_namespace: true
    values:
      hostNetwork: true
      podSecurityContext:
        sysctls:
        - name: net.ipv4.ping_group_range
          value: "0 65536"
      config:
        modules:
          http_2xx:
            prober: http
            timeout: 5s
            http:
              valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
              follow_redirects: true
              preferred_ip_protocol: "ip4"
          tcp:
            prober: tcp
            tcp:
              ip_protocol_fallback: false
              preferred_ip_protocol: "ip4"
          icmp:
            prober: icmp
            icmp:
              preferred_ip_protocol: "ip4"